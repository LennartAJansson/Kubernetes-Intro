apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: buildversionsapi
  name: buildversionsapi
  labels:
    app: buildversionsapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: buildversionsapi
  template:
    metadata:
      labels:
        app: buildversionsapi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      # The correct way to make sure we tighten security in the container by 
      # not allowing it to execute in the default context of root user

      # 4. Add a security context for our user app that we created in dockerfile
      # BE AWARE: Don't know if Microsoft is planning to change the id's frequently'
      securityContext:
        runAsGroup: 1654
        runAsUser: 1654
        fsGroup: 1654
      containers:
      - name: buildversionsapi
        image: registry:5000/buildversionsapi:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        #   capabilities:
        #     add: ["NET_ADMIN", "SYS_TIME"]
        volumeMounts:
          - name: buildversionsapi-storage
            mountPath: "/data"
            readOnly: false
        envFrom:
        - secretRef: 
            name: buildversionsapi-secret
        - configMapRef:
            name: buildversionsapi-configmap
        ports:
        - containerPort: 80
          name: http
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          requests:
            memory: "128Mi"
            cpu: "16m"
          limits:
            memory: "256Mi"
            cpu: "512m"
      volumes:
        - name: buildversionsapi-storage
          persistentVolumeClaim:
            claimName: buildversionsapi-claim
